default_platform :ios

platform :ios do

  before_all do
    #ensure_git_status_clean
    #cocoapods
  end

  lane :homol do
    ensure_git_branch(
      branch: 'homol'
    )

    # build / arquive
    build_number = Time.new.strftime("%y%m%d%H%M%S")
    increment_build_number build_number: build_number

    sigh(
      adhoc: false,
      force: true
    )

    ENV["PROFILE_UDID"] = lane_context[SharedValues::SIGH_UDID]
    gym

    # deploy
    testflight

    clean_build_artifacts
    commit_version_bump_new(
      message: "Deploying build #{build_number}.",
      force: true
    )
    push_to_git_remote
  end

  lane :desenv do
    ensure_git_branch(
      branch: 'desenv'
    )

    # build / arquive
    build_number = Time.new.strftime("%y%m%d%H%M%S")
    increment_build_number build_number: build_number

    sigh(
      adhoc: true,
      force: true
    )

    ENV["PROFILE_UDID"] = lane_context[SharedValues::SIGH_UDID]
    gym

    # deploy
    crashlytics(
      notifications: 'YES',
      groups: 'corpo-na-medida'
    )

    clean_build_artifacts
    commit_version_bump_new(
      message: "Deploying build #{build_number}.",
      force: true
    )
    push_to_git_remote
  end

  lane :tests do

    build_number = Time.new.strftime("%y%m%d%H%M%S")
    increment_build_number build_number: build_number
    clean_build_artifacts
    commit_version_bump_new(
      message: "Deploying version #{build_number} (build_number).",
      force: true
    )

  end

  after_all do |lane|

  end

  error do |lane, exception|
  end
end
